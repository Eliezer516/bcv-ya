{"id":"../node_modules/nth-check/lib/compile.js","dependencies":[{"name":"C:\\Users\\IRAIDA\\Desktop\\web-scraping\\package.json","includedInParent":true,"mtime":1637633329892},{"name":"C:\\Users\\IRAIDA\\Desktop\\web-scraping\\node_modules\\nth-check\\package.json","includedInParent":true,"mtime":1637633328186},{"name":"boolbase","loc":{"line":4,"column":25},"parent":"C:\\Users\\IRAIDA\\Desktop\\web-scraping\\node_modules\\nth-check\\lib\\compile.js","resolved":"C:\\Users\\IRAIDA\\Desktop\\web-scraping\\node_modules\\boolbase\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = void 0;\nvar boolbase_1 = require(\"boolbase\");\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction compile(parsed) {\n    var a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    var b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase_1.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return function (index) { return index <= b; };\n    if (a === 0)\n        return function (index) { return index === b; };\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase_1.trueFunc : function (index) { return index >= b; };\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    var absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    var bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? function (index) { return index >= b && index % absA === bMod; }\n        : function (index) { return index <= b && index % absA === bMod; };\n}\nexports.compile = compile;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/nth-check/lib/compile.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"../node_modules/nth-check/lib/compile.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = void 0;\nvar boolbase_1 = require(\"boolbase\");\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction compile(parsed) {\n    var a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    var b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase_1.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return function (index) { return index <= b; };\n    if (a === 0)\n        return function (index) { return index === b; };\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase_1.trueFunc : function (index) { return index >= b; };\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    var absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    var bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? function (index) { return index >= b && index % absA === bMod; }\n        : function (index) { return index <= b && index % absA === bMod; };\n}\nexports.compile = compile;\n"},"lineCount":56}},"error":null,"hash":"daff6661db74eb782146171665fd2f1c","cacheData":{"env":{}}}